spring.kafka.bootstrap-servers=pkc-lzvrd.us-west4.gcp.confluent.cloud:9092
# Kafka
#spring.kafka.properties.ssl.endpoint.identification.algorithm=https
## Required connection configs for Kafka producer, consumer, and admin
#spring.kafka.properties.sasl.mechanism=PLAIN
#spring.kafka.properties.bootstrap.servers=pkc-lzvrd.us-west4.gcp.confluent.cloud:9092
#spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="WKCRU6U3VKDMT4E4" password="e6h3MxXvuRAzyUTnf+dUv6whWZ4j250yh+UUxYDg8zd42KB6f5u/RGfpIEPgOqup";
#spring.kafka.properties.security.protocol=SASL_SSL
#
## Best practice for higher availability in Apache Kafka clients prior to 3.0
#spring.kafka.properties.session.timeout.ms=45000
#
#
#
## Configurations
##  la clé des messages Kafka sera sérialisée en utilisant ce sérialiseur. Si la clé est de type Integer,
##  cela garantit que les clés sont correctement sérialisées sous forme d'entiers lorsqu'elles sont envoyées à Kafka.
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.IntegerSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
##
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
## Best practice for higher availability in Apache Kafka clients prior to 3.0
## Required connection configs for Confluent Cloud Schema Registry
